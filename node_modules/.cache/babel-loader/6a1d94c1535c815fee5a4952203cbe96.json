{"ast":null,"code":"import _regeneratorRuntime from\"D:/react-crypto-tracker-Firebase-Integration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/react-crypto-tracker-Firebase-Integration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/react-crypto-tracker-Firebase-Integration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Box,Button,TextField}from\"@material-ui/core\";import{useState}from\"react\";import{CryptoState}from\"../../CryptoContext\";import{createUserWithEmailAndPassword}from\"firebase/auth\";import{auth}from\"../../firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Signup=function Signup(_ref){var handleClose=_ref.handleClose;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),confirmPassword=_useState6[0],setConfirmPassword=_useState6[1];var _CryptoState=CryptoState(),setAlert=_CryptoState.setAlert;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(password!==confirmPassword)){_context.next=3;break;}setAlert({open:true,message:\"Big Error â€“ Screwed up big time. Just kidding: Passwords do not match. Please check again.\",type:\"error\"});return _context.abrupt(\"return\");case 3:_context.prev=3;_context.next=6;return createUserWithEmailAndPassword(auth,email,password);case 6:result=_context.sent;setAlert({open:true,message:\"Sign Up Successful.Your day's just about to get better unless you've just had sex. Welcome \".concat(result.user.email,\" to Crypto Analytics\\uD83D\\uDCC9\"),type:\"success\"});handleClose();_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](3);setAlert({open:true,message:_context.t0.message,type:\"error\"});return _context.abrupt(\"return\");case 15:case\"end\":return _context.stop();}}},_callee,null,[[3,11]]);}));return function handleSubmit(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Box,{p:3,style:{display:\"flex\",flexDirection:\"column\",gap:\"20px\"},children:[/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",type:\"email\",label:\"Enter Email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);},fullWidth:true}),/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",label:\"Enter Password\",type:\"password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);},fullWidth:true}),/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",label:\"Confirm Password\",type:\"password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);},fullWidth:true}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"large\",style:{backgroundColor:\"#baeb0b\"},onClick:handleSubmit,children:\"Sign Up\"})]});};export default Signup;","map":{"version":3,"sources":["D:/react-crypto-tracker-Firebase-Integration/src/components/Authentication/Signup.js"],"names":["Box","Button","TextField","useState","CryptoState","createUserWithEmailAndPassword","auth","Signup","handleClose","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","setAlert","handleSubmit","open","message","type","result","user","display","flexDirection","gap","e","target","value","backgroundColor"],"mappings":"seAAA,OAASA,GAAT,CAAcC,MAAd,CAAsBC,SAAtB,KAAuC,mBAAvC,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,WAAT,KAA4B,qBAA5B,CACA,OAASC,8BAAT,KAA+C,eAA/C,CACA,OAASC,IAAT,KAAqB,gBAArB,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAqB,IAAlBC,CAAAA,WAAkB,MAAlBA,WAAkB,eACRL,QAAQ,CAAC,EAAD,CADA,wCAC3BM,KAD2B,eACpBC,QADoB,8BAEFP,QAAQ,CAAC,EAAD,CAFN,yCAE3BQ,QAF2B,eAEjBC,WAFiB,8BAGYT,QAAQ,CAAC,EAAD,CAHpB,yCAG3BU,eAH2B,eAGVC,kBAHU,gCAKbV,WAAW,EALE,CAK1BW,QAL0B,cAK1BA,QAL0B,CAOlC,GAAMC,CAAAA,YAAY,2FAAG,mJACfL,QAAQ,GAAKE,eADE,0BAEjBE,QAAQ,CAAC,CACPE,IAAI,CAAE,IADC,CAEPC,OAAO,CAAE,4FAFF,CAGPC,IAAI,CAAE,OAHC,CAAD,CAAR,CAFiB,8EAWId,CAAAA,8BAA8B,CACjDC,IADiD,CAEjDG,KAFiD,CAGjDE,QAHiD,CAXlC,QAWXS,MAXW,eAgBjBL,QAAQ,CAAC,CACPE,IAAI,CAAE,IADC,CAEPC,OAAO,sGAAgGE,MAAM,CAACC,IAAP,CAAYZ,KAA5G,oCAFA,CAGPU,IAAI,CAAE,SAHC,CAAD,CAAR,CAMAX,WAAW,GAtBM,iFAwBjBO,QAAQ,CAAC,CACPE,IAAI,CAAE,IADC,CAEPC,OAAO,CAAE,YAAMA,OAFR,CAGPC,IAAI,CAAE,OAHC,CAAD,CAAR,CAxBiB,sGAAH,kBAAZH,CAAAA,YAAY,2CAAlB,CAiCA,mBACE,MAAC,GAAD,EACE,CAAC,CAAE,CADL,CAEE,KAAK,CAAE,CACLM,OAAO,CAAE,MADJ,CAELC,aAAa,CAAE,QAFV,CAGLC,GAAG,CAAE,MAHA,CAFT,wBAQE,KAAC,SAAD,EACE,OAAO,CAAC,UADV,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAC,aAHR,CAIE,KAAK,CAAEf,KAJT,CAKE,QAAQ,CAAE,kBAACgB,CAAD,QAAOf,CAAAA,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,EALZ,CAME,SAAS,KANX,EARF,cAgBE,KAAC,SAAD,EACE,OAAO,CAAC,UADV,CAEE,KAAK,CAAC,gBAFR,CAGE,IAAI,CAAC,UAHP,CAIE,KAAK,CAAEhB,QAJT,CAKE,QAAQ,CAAE,kBAACc,CAAD,QAAOb,CAAAA,WAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EALZ,CAME,SAAS,KANX,EAhBF,cAwBE,KAAC,SAAD,EACE,OAAO,CAAC,UADV,CAEE,KAAK,CAAC,kBAFR,CAGE,IAAI,CAAC,UAHP,CAIE,KAAK,CAAEd,eAJT,CAKE,QAAQ,CAAE,kBAACY,CAAD,QAAOX,CAAAA,kBAAkB,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAzB,EALZ,CAME,SAAS,KANX,EAxBF,cAgCE,KAAC,MAAD,EACE,OAAO,CAAC,WADV,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAE,CAAEC,eAAe,CAAE,SAAnB,CAHT,CAIE,OAAO,CAAEZ,YAJX,qBAhCF,GADF,CA2CD,CAnFD,CAqFA,cAAeT,CAAAA,MAAf","sourcesContent":["import { Box, Button, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { CryptoState } from \"../../CryptoContext\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\n\nconst Signup = ({ handleClose }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const { setAlert } = CryptoState();\n\n  const handleSubmit = async () => {\n    if (password !== confirmPassword) {\n      setAlert({\n        open: true,\n        message: \"Big Error â€“ Screwed up big time. Just kidding: Passwords do not match. Please check again.\",\n        type: \"error\",\n      });\n      return;\n    }\n\n    try {\n      const result = await createUserWithEmailAndPassword(\n        auth,\n        email,\n        password\n      );\n      setAlert({\n        open: true,\n        message: `Sign Up Successful.Your day's just about to get better unless you've just had sex. Welcome ${result.user.email} to Crypto AnalyticsðŸ“‰`,\n        type: \"success\",\n      });\n\n      handleClose();\n    } catch (error) {\n      setAlert({\n        open: true,\n        message: error.message,\n        type: \"error\",\n      });\n      return;\n    }\n  };\n\n  return (\n    <Box\n      p={3}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"20px\",\n      }}\n    >\n      <TextField\n        variant=\"outlined\"\n        type=\"email\"\n        label=\"Enter Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        fullWidth\n      />\n      <TextField\n        variant=\"outlined\"\n        label=\"Enter Password\"\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        fullWidth\n      />\n      <TextField\n        variant=\"outlined\"\n        label=\"Confirm Password\"\n        type=\"password\"\n        value={confirmPassword}\n        onChange={(e) => setConfirmPassword(e.target.value)}\n        fullWidth\n      />\n      <Button\n        variant=\"contained\"\n        size=\"large\"\n        style={{ backgroundColor: \"#baeb0b\" }}\n        onClick={handleSubmit}\n      >\n        Sign Up\n      </Button>\n    </Box>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}