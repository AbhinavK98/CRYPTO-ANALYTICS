{"ast":null,"code":"import _regeneratorRuntime from\"D:/react-crypto-tracker-Firebase-Integration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/react-crypto-tracker-Firebase-Integration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"D:/react-crypto-tracker-Firebase-Integration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"D:/react-crypto-tracker-Firebase-Integration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axios\";import{useEffect,useState}from\"react\";import{HistoricalChart}from\"../config/api\";import{Line}from\"react-chartjs-2\";import{CircularProgress,createTheme,makeStyles,ThemeProvider}from\"@material-ui/core\";import SelectButton from\"./SelectButton\";import{chartDays}from\"../config/data\";import{CryptoState}from\"../CryptoContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CoinInfo=function CoinInfo(_ref){var coin=_ref.coin;var _useState=useState(),_useState2=_slicedToArray(_useState,2),historicData=_useState2[0],setHistoricData=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),days=_useState4[0],setDays=_useState4[1];var _CryptoState=CryptoState(),currency=_CryptoState.currency;var useStyles=makeStyles(function(theme){return{container:_defineProperty({width:\"75%\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",marginTop:25,padding:40},theme.breakpoints.down(\"md\"),{width:\"100%\",marginTop:0,padding:20,paddingTop:0})};});var classes=useStyles();var fetchHistoricData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(HistoricalChart(coin.id,days,currency));case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;setHistoricData(data.prices);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchHistoricData(){return _ref2.apply(this,arguments);};}();useEffect(function(){fetchHistoricData();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[days,currency]);var darkTheme=createTheme({palette:{primary:{main:\"#fff\"},type:\"dark\"}});return/*#__PURE__*/_jsx(ThemeProvider,{theme:darkTheme,children:/*#__PURE__*/_jsx(\"div\",{className:classes.container,children:!historicData?/*#__PURE__*/_jsx(CircularProgress,{style:{color:\"#baeb0b\"},size:250,thickness:1}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Line,{data:{labels:historicData.map(function(coin){var date=new Date(coin[0]);var time=date.getHours()>12?\"\".concat(date.getHours()-12,\":\").concat(date.getMinutes(),\" PM\"):\"\".concat(date.getHours(),\":\").concat(date.getMinutes(),\" AM\");return days===1?time:date.toLocaleDateString();}),datasets:[{data:historicData.map(function(coin){return coin[1];}),label:\"Price ( Past \".concat(days,\" Days ) in \").concat(currency),borderColor:\"#baeb0b\"}]},options:{elements:{point:{radius:1}}}}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",marginTop:20,justifyContent:\"space-around\",width:\"100%\"},children:chartDays.map(function(day){return/*#__PURE__*/_jsx(SelectButton,{onClick:function onClick(){return setDays(day.value);},selected:day.value===days,children:day.label},day.value);})})]})})});};export default CoinInfo;","map":{"version":3,"sources":["D:/react-crypto-tracker-Firebase-Integration/src/components/CoinInfo.js"],"names":["axios","useEffect","useState","HistoricalChart","Line","CircularProgress","createTheme","makeStyles","ThemeProvider","SelectButton","chartDays","CryptoState","CoinInfo","coin","historicData","setHistoricData","days","setDays","currency","useStyles","theme","container","width","display","flexDirection","alignItems","justifyContent","marginTop","padding","breakpoints","down","paddingTop","classes","fetchHistoricData","get","id","data","prices","darkTheme","palette","primary","main","type","color","labels","map","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","label","borderColor","elements","point","radius","day","value"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { HistoricalChart } from \"../config/api\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  CircularProgress,\n  createTheme,\n  makeStyles,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport SelectButton from \"./SelectButton\";\nimport { chartDays } from \"../config/data\";\nimport { CryptoState } from \"../CryptoContext\";\n\nconst CoinInfo = ({ coin }) => {\n  const [historicData, setHistoricData] = useState();\n  const [days, setDays] = useState(1);\n  const { currency } = CryptoState();\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      width: \"75%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: 25,\n      padding: 40,\n      [theme.breakpoints.down(\"md\")]: {\n        width: \"100%\",\n        marginTop: 0,\n        padding: 20,\n        paddingTop: 0,\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n  const fetchHistoricData = async () => {\n    const { data } = await axios.get(HistoricalChart(coin.id, days, currency));\n\n    setHistoricData(data.prices);\n  };\n\n  useEffect(() => {\n    fetchHistoricData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [days, currency]);\n\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\",\n      },\n      type: \"dark\",\n    },\n  });\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className={classes.container}>\n        {!historicData ? (\n          <CircularProgress\n            style={{ color: \"#baeb0b\" }}\n            size={250}\n            thickness={1}\n          />\n        ) : (\n          <>\n            <Line\n              data={{\n                labels: historicData.map((coin) => {\n                  let date = new Date(coin[0]);\n                  let time =\n                    date.getHours() > 12\n                      ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n                      : `${date.getHours()}:${date.getMinutes()} AM`;\n                  return days === 1 ? time : date.toLocaleDateString();\n                }),\n\n                datasets: [\n                  {\n                    data: historicData.map((coin) => coin[1]),\n                    label: `Price ( Past ${days} Days ) in ${currency}`,\n                    borderColor: \"#baeb0b\",\n                  },\n                ],\n              }}\n              options={{\n                elements: {\n                  point: {\n                    radius: 1,\n                  },\n                },\n              }}\n            />\n            <div\n              style={{\n                display: \"flex\",\n                marginTop: 20,\n                justifyContent: \"space-around\",\n                width: \"100%\",\n              }}\n            >\n              {chartDays.map((day) => (\n                <SelectButton\n                  key={day.value}\n                  onClick={() => setDays(day.value)}\n                  selected={day.value === days}\n                >\n                  {day.label}\n                </SelectButton>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default CoinInfo;\n"]},"metadata":{},"sourceType":"module"}